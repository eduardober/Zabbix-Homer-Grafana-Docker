version: '2.1'

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:master
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_INSTALL_PLUGINS=alexanderzobnin-zabbix-app
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=alexanderzobnin-zabbix-datasource
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_AUTH_OAUTH_AUTO_LOGIN=true
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_EXPLORE_ENABLED=true
    restart: unless-stopped
    ports:
      - "9030:3000"
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:3000/login || exit 1"]
      interval: 1s
      timeout: 3s
      retries: 30
    labels:
      org.label-schema.group: "monitoring"

  loki:
    image: grafana/loki
    container_name: loki
    restart: unless-stopped
    expose:
      - 3100
    ports:
      - "3100:3100"
    labels:
      org.label-schema.group: "monitoring"

  heplify-server:
    image: sipcapture/heplify-server
    container_name: heplify-server
    ports:
      - "9060:9060"
      - "9060:9060/udp"
      - "9061:9061/tcp"
    command:
      - './heplify-server'
    environment:
      - "HEPLIFYSERVER_HEPADDR=0.0.0.0:9060"
      - "HEPLIFYSERVER_HEPTCPADDR=0.0.0.0:9061"
      - "HEPLIFYSERVER_DBSHEMA=homer7"
      - "HEPLIFYSERVER_DBDRIVER=postgres"
      - "HEPLIFYSERVER_DBADDR=db:5432"
      - "HEPLIFYSERVER_DBUSER=root"
      - "HEPLIFYSERVER_DBPASS=homerSeven"
      - "HEPLIFYSERVER_DBDATATABLE=homer_data"
      - "HEPLIFYSERVER_DBCONFTABLE=homer_config"
      - "HEPLIFYSERVER_DBROTATE=true"
      - "HEPLIFYSERVER_DBDROPDAYS=5"
      - "HEPLIFYSERVER_LOGLVL=info"
      - "HEPLIFYSERVER_LOGSTD=true"
      - "HEPLIFYSERVER_PROMADDR=0.0.0.0:9096"
#      - "HEPLIFYSERVER_PROMTARGETIP=127.0.0.1"
#      - "HEPLIFYSERVER_PROMTARGETNAME=local"
      - "HEPLIFYSERVER_DEDUP=false"
      - "HEPLIFYSERVER_LOKIURL=http://loki:3100/api/prom/push"
      - "HEPLIFYSERVER_LOKITIMER=2"
    restart: unless-stopped
    depends_on:
      - loki
      - db
    expose:
      - 9060
      - 9061
      - 9096
    labels:
      org.label-schema.group: "monitoring"

  homer-webapp:
    container_name: homer-webapp
    image: sipcapture/webapp
    environment:
      - "LOKI_HOST=loki"
      - "PROM_HOST=prometheus"
      - "DB_HOST=db"
      - "DB_USER=root"
      - "DB_PASS=homerSeven"
    restart: unless-stopped
    ports:
      - "9080:80"
    volumes:
      - ./bootstrap:/app/bootstrap
    depends_on:
      db:
        condition: service_healthy
      grafana:
        condition: service_healthy

  db:
    container_name: db
    image: postgres:11-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: homerSeven
      POSTGRES_USER: root
    expose:
      - 5432
    restart: unless-stopped
    volumes:
      - ./init-user-db-homer.sh:/docker-entrypoint-initdb.d/init-user-db-homer.sh
      - ./postgres-data-homer:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "psql -h 'localhost' -U 'root' -c '\\l'"]
      interval: 1s
      timeout: 3s
      retries: 30
    depends_on:
      - grafana

  postgres-server:
    container_name: postgres-server
    image: postgres:13.6-bullseye
    restart: always
    environment:
      POSTGRES_PASSWORD: zabbix
      POSTGRES_USER: root
    ports:
      - "5431:5432"
    expose:
      - 5431
    restart: unless-stopped
    volumes:
      - ./init-user-db-zabbix.sh:/docker-entrypoint-initdb.d/init-user-db_zabbix.sh
      - ./postgres-data-zabbix:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "psql -h 'localhost' -U 'root' -c '\\l'"]
      interval: 1s
      timeout: 3s
      retries: 30

  zabbix-server:
    container_name: zabbix-server
    image: zabbix/zabbix-server-pgsql:latest
    restart: always
    environment:
      DB_SERVER_HOST: postgres-server
      DB_SERVER_PORT: 5431
      POSTGRES_PASSWORD: zabbix
      POSTGRES_USER: root
      ZBX_CACHESIZE: 64M
    expose:
      - 10051
    ports:
      - "10050:10050"
      - "10051:10051"
    restart: unless-stopped
    volumes:
      - './zabbix/alertscripts:/usr/lib/zabbix/alertscripts'
    depends_on:
      postgres-server:
        condition: service_healthy

  zabbix-web:
    container_name: zabbix-web
    image: zabbix/zabbix-web-apache-pgsql:latest
    restart: always
    environment:
      ServerName: Zabbix ABL
      PHP_TZ: America/Sao_Paulo
      ZBX_SERVER_HOST: localhost
      DB_SERVER_HOST: postgres-server
      DB_SERVER_PORT: 5431
      POSTGRES_PASSWORD: zabbix
      POSTGRES_USER: root
    expose:
      - 9070
    ports:
      - "9070:8080"
    restart: unless-stopped
    depends_on:
      postgres-server:
        condition: service_healthy
